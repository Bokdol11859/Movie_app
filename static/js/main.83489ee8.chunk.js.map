{"version":3,"sources":["Components/Navigation.js","Routes/About.js","Components/Movie.js","Routes/Home.js","App.js","reportWebVitals.js","index.js"],"names":["Navigation","to","About","Movie","year","title","poster","summary","genre","className","src","alt","map","index","slice","Home","state","isLoading","movies","getMovies","a","axios","get","data","setState","this","movie","id","medium_cover_image","genres","Component","App","path","exact","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gPAgBeA,MAbf,WACI,OACI,gCACI,cAAC,IAAD,CAAMC,GAAG,IAAT,kBACA,cAAC,IAAD,CAAMA,GAAG,SAAT,mBACA,uBACA,uBACA,uBACA,2BCEGC,MAXf,WACI,OACI,+BACI,qF,gFC4BGC,MA7Bf,YAAyD,IAAxCC,EAAuC,EAAvCA,KAAMC,EAAiC,EAAjCA,MAAOC,EAA0B,EAA1BA,OAAQC,EAAkB,EAAlBA,QAASC,EAAS,EAATA,MAC7C,OACE,sBAAKC,UAAU,QAAf,UACE,qBAAKC,IAAKJ,EAAQK,IAAKN,EAAOA,MAAOA,IACrC,sBAAKI,UAAU,aAAf,UACE,oBAAIA,UAAU,cAAd,SAA6BJ,IAC7B,oBAAII,UAAU,cAAd,SACGD,EAAMI,KAAI,SAACJ,EAAOK,GAAR,OACT,oBAAgBJ,UAAU,cAA1B,SACGD,GADMK,QAKb,oBAAIJ,UAAU,aAAd,SAA4BL,IAC5B,oBAAGK,UAAU,YAAb,UAA0BF,EAAQO,MAAM,EAAG,KAA3C,gBCmCOC,G,kNA/CbC,MAAQ,CACNC,WAAW,EACXC,OAAQ,I,EAGVC,U,sBAAY,8BAAAC,EAAA,sEAKAC,IAAMC,IACd,4DANQ,gBAGEJ,EAHF,EAERK,KACEA,KAAQL,OAKZ,EAAKM,SAAS,CAAEN,OAAQA,EAAQD,WAAW,IARjC,2C,uDAWZ,WACEQ,KAAKN,c,oBAGP,WACE,MAA8BM,KAAKT,MAA3BC,EAAR,EAAQA,UAAWC,EAAnB,EAAmBA,OACnB,OACE,yBAAST,UAAU,YAAnB,SACGQ,EACC,qBAAKR,UAAU,SAAf,SACE,sBAAMA,UAAU,cAAhB,0BAGF,qBAAKA,UAAU,SAAf,SACGS,EAAON,KAAI,SAAAc,GAAK,OACf,cAAC,EAAD,CAEEC,GAAID,EAAMC,GACVvB,KAAMsB,EAAMtB,KACZC,MAAOqB,EAAMrB,MACbE,QAASmB,EAAMnB,QACfD,OAAQoB,EAAME,mBACdpB,MAAOkB,EAAMG,QANRH,EAAMC,e,GAjCRG,cCaJC,MAXf,WACE,OACE,eAAC,IAAD,WACE,cAAC,EAAD,IACA,cAAC,IAAD,CAAOC,KAAK,IAAIC,OAAO,EAAMC,UAAWnB,IACxC,cAAC,IAAD,CAAOiB,KAAK,SAASE,UAAWhC,QCAvBiC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.83489ee8.chunk.js","sourcesContent":["import React from 'react';\r\nimport {Link} from 'react-router-dom'\r\n\r\nfunction Navigation(){\r\n    return(\r\n        <div>\r\n            <Link to=\"/\">Home</Link>\r\n            <Link to='/about'>About</Link>\r\n            <br></br>\r\n            <br></br>\r\n            <br></br>\r\n            <br></br>\r\n        </div>\r\n    ) \r\n}\r\n\r\nexport default Navigation;","import React from 'react';\r\n\r\nfunction About(){\r\n    return(\r\n        <span>\r\n            <p>\r\n                This is Clone Coding from the NomadCoders Lecture\r\n            </p>\r\n        </span>\r\n    )\r\n     \r\n}\r\n\r\nexport default About;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './Movie.css';\r\n\r\nfunction Movie({ year, title, poster, summary, genre }) {\r\n  return (\r\n    <div className=\"movie\">\r\n      <img src={poster} alt={title} title={title}></img>\r\n      <div className=\"movie_data\">\r\n        <h3 className=\"movie_title\">{title}</h3>\r\n        <ul className=\"movie_genre\">\r\n          {genre.map((genre, index) => (\r\n            <li key={index} className=\"genre_genre\">\r\n              {genre}\r\n            </li>\r\n          ))}\r\n        </ul>\r\n        <h5 className=\"movie_year\">{year}</h5>\r\n        <p className=\"movie_sum\">{summary.slice(0, 140)}...</p>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nMovie.propTypes = {\r\n  id: PropTypes.number.isRequired,\r\n  year: PropTypes.number.isRequired,\r\n  title: PropTypes.string.isRequired,\r\n  poster: PropTypes.string.isRequired,\r\n  summary: PropTypes.string.isRequired,\r\n  genre: PropTypes.arrayOf(PropTypes.string).isRequired,\r\n};\r\n\r\nexport default Movie;\r\n","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport Movie from '../Components/Movie';\r\nimport \"./Home.css\";\r\n\r\nclass Home extends Component {\r\n  state = {\r\n    isLoading: true,\r\n    movies: [],\r\n  };\r\n\r\n  getMovies = async () => {\r\n    const {\r\n      data: {\r\n        data: { movies },\r\n      },\r\n    } = await axios.get(\r\n      'https://yts-proxy.now.sh/list_movies.json?sort_by=rating'\r\n    );\r\n    this.setState({ movies: movies, isLoading: false });\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.getMovies();\r\n  }\r\n\r\n  render() {\r\n    const { isLoading, movies } = this.state;\r\n    return (\r\n      <section className=\"container\">\r\n        {isLoading ? (\r\n          <div className=\"loader\">\r\n            <span className=\"loader_text\">Loading...</span>\r\n          </div>\r\n        ) : (\r\n          <div className=\"movies\">\r\n            {movies.map(movie => (\r\n              <Movie\r\n                key={movie.id}\r\n                id={movie.id}\r\n                year={movie.year}\r\n                title={movie.title}\r\n                summary={movie.summary}\r\n                poster={movie.medium_cover_image}\r\n                genre={movie.genres}\r\n              />\r\n            ))}\r\n          </div>\r\n        )}\r\n      </section>\r\n    );\r\n  }\r\n}\r\nexport default Home;\r\n","import React from \"react\";\r\nimport { HashRouter, Route } from 'react-router-dom';\r\nimport Navigation from \"./Components/Navigation\";\r\nimport About from './Routes/About';\r\nimport Home from './Routes/Home';\r\n\r\n\r\nfunction App(){\r\n  return(\r\n    <HashRouter>\r\n      <Navigation />\r\n      <Route path='/' exact={true} component={Home} />\r\n      <Route path='/about' component={About} />\r\n    </HashRouter>\r\n  )\r\n\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}